/* This program was automatically generated by vissim_interaction.rb on 14-06-2008 */
PROGRAM fabriksparken; /*  */

CONST
	STAGE1_TIME = 40,
	STAGE2_TIME = 22,
	STAGE3_TIME = 3,
	BUSDETN = 101,
	BUSDETS = 102,
	BUSDETN_END = 201,
	BUSDETS_END = 202,
	BASE_CYCLE_TIME = 80,
	OFFSET = 12;

DOGS_LEVEL := Marker_get(1);
TIME := Marker_get(2);
stage1_end := STAGE1_TIME + 8 * DOGS_LEVEL + 10 * BUS_PRIORITY;
stage2_end := STAGE2_TIME + 2 * DOGS_LEVEL + isl(1,2) + stage1_end - 10 * BUS_PRIORITY;
stage3_end := STAGE3_TIME + isl(2,3) + stage2_end;

S000: IF NOT SYNC THEN
S001:    IF (TIME - 1) = OFFSET THEN
S002:       SYNC := 1;
         END;
         GOTO PROG_ENDE
      END;
S003: C := BASE_CYCLE_TIME + 10 * DOGS_LEVEL;
S004: t_loc := (TIME - OFFSET) % C + 1;
S005: SetT(t_loc);
S006: IF Detection(BUSDETN) THEN
S007:    BUS_FROM_NORTH := 1;
      END;
S008: IF Detection(BUSDETS) THEN
S009:    BUS_FROM_SOUTH := 1;
      END;
S010: IF Detection(BUSDETN_END) THEN
S011:    BUS_FROM_NORTH := 0;
      END;
S012: IF Detection(BUSDETS_END) THEN
S013:    BUS_FROM_SOUTH := 0;
      END;
S014: IF stga(1) THEN
S015:    IF (BUS_PRIORITY = 1) AND (NOT BUS_FROM_NORTH) AND (NOT BUS_FROM_SOUTH) AND (T < (stage1_end - 10)) THEN
S016:       BUS_PRIORITY := 0;
         END;
S017:    IF (BUS_FROM_NORTH OR BUS_FROM_SOUTH) AND (BUS_PRIORITY = 0) THEN
S018:       BUS_PRIORITY := 1;
         END;
      END;
S019: IF stga(1) THEN
S020:    IF T = stage1_end THEN
IS1_2:      Is(1,2);
         END
      END;
S021: IF stga(2) THEN
S022:    IF T = stage2_end THEN
IS2_3:      Is(2,3);
S023:       IF BUS_PRIORITY = -1 THEN
S024:       	BUS_PRIORITY := 0; /* two cycles of bus priority has finished and the donor received its compensation */
            END;
         END
      END;
S025: IF stga(3) THEN
S026:    IF T = stage3_end THEN
IS3_1:      Is(3,1);
S027:       IF BUS_PRIORITY = 1 THEN
S028:         BUS_PRIORITY := -1; /* subtract the extra bus time in next cycle */
            END;
         END
      END;
S029: IF stga(1) AND (T > (stage1_end + isl(1,2))) AND ((T + 6) < stage2_end) THEN
        GOTO IS1_2;
      END;
S030: IF stga(2) AND (T > (stage2_end + isl(2,3))) AND ((T + 6) < stage3_end) THEN
        GOTO IS2_3;
      END
PROG_ENDE:    .